{% extends 'base.html.twig' %}

{% block title %}{% trans %}Tituluj.Aves{% endtrans %}{% endblock %}


{% block body %}


    <script type="text/javascript">
      window.onload = function(){

    var layerOTM = new ol.layer.Tile({
   //     source: new ol.source.OSM()
        source: new ol.source.XYZ({
        url: 'https://{a-c}.tile.opentopomap.org/{z}/{x}/{y}.png'
    }),
            opacity:0.4
      });

        var layerOSM = new ol.layer.Group({ 
          layers: [
          new ol.layer.Tile({
     source: new ol.source.OSM(),
            opacity:0.3
          }),
         ]
    });



    var chvu =  new ol.layer.Group({ 
          layers: [ 
            new ol.layer.Tile({
        source: new ol.source.TileWMS({
        url: 'http://maps.sopsr.sk/geoserver/wms?version=1.3.0',
        params: {
            'LAYERS': 'chvu',
        },
          })
        })
            ]
    });

    var orto =  new ol.layer.Group({ 
        layers: [
          new ol.layer.Tile({
        source: new ol.source.TileWMS({
        url: 'https://zbgisws.skgeodesy.sk/zbgis_ortofoto_wms/service.svc/get',
        params: {
            'LAYERS': '1',
        },
          })
        })
          ]
        });
        // definovanie štýlu pre bod, čo skúšam
      var styl = new ol.style.Style({
          image: new ol.style.Circle({
            radius: 20,
            fill: null,
            stroke: new ol.style.Stroke({color: '#00FF00', width: 2})
          })
      });
      var pozicia        = new ol.geom.Point(ol.proj.transform([19.6,48.7], 'EPSG:4326', 'EPSG:3857'));
//      var pozicia        = new ol.geom.Point(coordT);
      var poziciaFeature = new ol.Feature(pozicia); 

      var vectorSource = new ol.source.Vector({
                projection: 'EPSG:4326',
                features: [poziciaFeature]
            });
      var bodpozicie = new ol.layer.Vector({
                source: vectorSource,
                style: styl
            });

        /////////// view /////////////
    var view = new ol.View({
        center: ol.proj.fromLonLat([19.6, 48.7]),
         projection: 'EPSG:3857',
        zoom: 8
      });

        //// funkcie ///
/*    function setMapType(evt) {
            window.alert('xxx');
      if(newType == 'OSM') {
          map.setLayerGroup(layersOSM);
      } else if (newType == 'CHVU') {
          map.setLayerGroup(chvu);
      }
    }
*/
        
/*
var switchLayer = function(evt){
    var attr = this.getAttribute('data-type');
    switch(attr){
        case 'OSM':
    //        insertLayer(OSMLayer);
            break;
        case 'CHVU':
     //       insertLayer(mapQuestOSMLayer);
            break;
    }
};

 var lis = document.getElementById('menuLS').getElementsByTagName('li');
*/
/////////////// poskladanie do MAP /////////////////
      var map = new ol.Map({
        target: 'map',
        layers: [orto,layerOTM,bodpozicie],
        view: view
      });


     // create an Overlay using the div with id location.
      var marker = new ol.Overlay({
        element: document.getElementById('location'),
        positioning: 'bottom-left',
        stopEvent: false
      });
     // add it to the map
//      map.addOverlay(marker);

        var suradnice = document.getElementById('myposition');
        var zLongitud = document.getElementById('zoology_zoology_longitud');
        var zLatitud  = document.getElementById('zoology_zoology_latitud');
        /*
        var mousePosition = new ol.control.MousePosition({
        coordinateFormat: ol.coordinate.createStringXY(5),
        projection: 'EPSG:4326',
        className: 'custom-mouse-position',
        target: suradnice,
        undefinedHTML: ''
      });

      map.addControl(mousePosition);


        */
      let coord = [];
      // We track coordinate change each time the mouse is moved
        map.on('click', function(evt){
        coord = evt.coordinate;
        var coordT = ol.proj.transform([parseFloat(coord[0]), parseFloat(coord[1])],'EPSG:3857', 'EPSG:4326');
        zLongitud.value =  coordT[0].toFixed(5);
        zLatitud.value  =  coordT[1].toFixed(5);
       var klikpozicia        = new ol.geom.Point(ol.proj.transform([parseFloat(coordT[0].toFixed(5)), parseFloat(coordT[1].toFixed(5))], 'EPSG:4326', 'EPSG:3857'));
      var novaKlikFeature = new ol.Feature(klikpozicia);
      vectorSource.clear();
      vectorSource.addFeature(novaKlikFeature);

      });

/*
      // Anytime you want, simply read the tracked coordinate
      document.addEventListener('mousedown', function(){
        console.log(coord);
      });
*/


      // create a Geolocation object setup to track the position of the device
      var geolocation = new ol.Geolocation({
        tracking: true
      });

      // bind the projection to the view so that positions are reported in the
      // projection of the view

      //geolocation.bindTo('projection', view);

 
      // bind the marker's position to the geolocation object, the marker will
      // move automatically when the GeoLocation API provides position updates
      //marker.bindTo('position', geolocation);

      // when the GeoLocation API provides a position update, center the view
      // on the new position
      geolocation.on('change:position', function() {
        var p = geolocation.getPosition();
        console.log(p[0] + ' : ' + p[1]);
        view.setCenter(ol.proj.transform([parseFloat(p[0]), parseFloat(p[1])],'EPSG:4326', 'EPSG:3857'));
      var zoompozicia        = new ol.geom.Point(ol.proj.transform([parseFloat(p[0]), parseFloat(p[1])], 'EPSG:4326', 'EPSG:3857'));
      var novaFeature = new ol.Feature(zoompozicia);
      vectorSource.clear();
      vectorSource.addFeature(novaFeature);
        view.setZoom(17);

      });

    }
    </script>

<div class="container">
<h1>{% trans %}novy.zaznam{% endtrans %}</h1>
    <div id="map" class="map" style="width: 100%; height: 280px;"></div>
    <div id="myposition"></div>
    {#
<select onchange="setMapType(this.options[this.selectedIndex].value);">
                <option value="OSM">OSM</option>
                <option value="chvu">CHVU</option>
</select> 
<ul id="menuLS">
    <li data-type="OSM">OSM</li>
    <li data-type="CHVU">CHVU</li>
</ul>
#}
{{ form(form) }}

</div>

{% endblock %}
